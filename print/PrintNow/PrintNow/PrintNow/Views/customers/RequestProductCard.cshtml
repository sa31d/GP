@model PrintNow.Models.Order

@{
    ViewBag.Title = "RequestProduct";
}

<h2>Request Product Card</h2>

@using (Html.BeginForm("RequestProduct", "Customers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <input type="file"   name="imageFile1" required/>
               </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
            </div>
        </div>
        @{var listItems = new List<SelectListItem>
    {
          new SelectListItem { Text = " 10 X 10 cm",Value = " 10 X 10 cm", Selected = true },
          new SelectListItem { Text = "2A0 - 168 X 118.9 cm",Value = "2A0 - 168 X 118.9 cm" },
          new SelectListItem { Text = "42 X 118.9 cm", Value = "42 X 118.9 cm"}
    };
        }
        
        <div class="form-group">
            @Html.LabelFor(model => model.printingSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.printingSize, listItems, "-- Select Size --", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.printingSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.material, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.material, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.material, "", new { @class = "text-danger" })
            </div>
        </div>
      
        @{var listIshape = new List<SelectListItem>
    {
          new SelectListItem { Text = " linear",Value = " linear", Selected = true },
          new SelectListItem { Text = "Horizontal",Value = "Horizontal" },
          new SelectListItem { Text = "Square", Value = "Square"},
          new SelectListItem { Text = "circular", Value = "circular" }
    };
        }
        <div class="form-group">
            @Html.LabelFor(model => model.shape, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.shape, listIshape, "-- Select Shape --", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.shape, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
