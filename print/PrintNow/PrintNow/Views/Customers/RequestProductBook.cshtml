@model PrintNow.Models.Order

@{
    ViewBag.Title = "RequestProduct";
}

<h2>Request Product Book</h2>

@using (Html.BeginForm("RequestProduct", "Customers"))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       
        <div class="form-group">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
            </div>
        </div>
        @{var listItems = new List<SelectListItem>
    {
          new SelectListItem { Text = " 10 X 10 cm",Value = " 10 X 10 cm" , Selected = true},
          new SelectListItem { Text = "168 X 118.9 cm",Value = "168 X 118.9 cm" },
          new SelectListItem { Text = "42 X 118.9 cm", Value = "42 X 118.9 cm"}
    };
        }

        <div class="form-group">
            @Html.LabelFor(model => model.printingSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.printingSize, listItems, "-- Select Size --", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.printingSize, "", new { @class = "text-danger" })
            </div>
        </div>
        @{var listIBrowseBook = new List<SelectListItem>
    {
          new SelectListItem { Text = " Arabic ( Right to Left )",Value = "Arabic ( Right to Left )" , Selected = true},
          new SelectListItem { Text = "English  ( Left to Right )",Value = "English  ( Left to Right )" },
    };
        }
        <div class="form-group">
            @Html.LabelFor(model => model.BrowseBook, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BrowseBook, listIBrowseBook, "-- Select Browse -- ", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BrowseBook, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberPages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberPages, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberPages, "", new { @class = "text-danger" })
            </div>
        </div>
        @{var listICollectionPapers = new List<SelectListItem>
    {
          new SelectListItem { Text = " Glue",Value = "Glue" , Selected = true},
          new SelectListItem { Text = "Spiral Wire",Value = "Spiral Wire" },
    };
        }
        <div class="form-group">
            @Html.LabelFor(model => model.CollectionPapers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CollectionPapers, listICollectionPapers, " -- Select CollectionPapers -- ", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CollectionPapers, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cover, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cover, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cover, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

